<div class="navbar navbar-inverse navbar-fixed-top">
  <div class="navbar-inner">
    <div class="container">
      <button data-target=".nav-collapse" data-toggle="collapse" class="btn btn-navbar" type="button">
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
      </button>
      <a href="./index.html" class="brand">Bootstrap</a>
      <div class="nav-collapse collapse">
        <ul class="nav">
          <li class="">
            <a href="./index.html">Home</a>
          </li>
          <li class="">
            <a href="./getting-started.html">Get started</a>
          </li>
          <li class="">
            <a href="./scaffolding.html">Scaffolding</a>
          </li>
          <li class="">
            <a href="./base-css.html">Base CSS</a>
          </li>
          <li class="active">
            <a href="./components.html">Components</a>
          </li>
          <li class="">
            <a href="./javascript.html">JavaScript</a>
          </li>
          <li class="">
            <a href="./application/test">Тестирование</a>
          </li>
        </ul>
      </div>
    </div>
  </div>
</div>
<header id="overview" class="jumbotron subhead">
  <div class="container">
    <h1>Backbone list lib</h1>
    <p class="lead">Библиотека пользовательских компонент для для фреймворка Backbone.</p>
  </div>
</header>
<div class="container">
  <div class="row">
    <div class="span3  bs-docs-sidebar">

      <ul class="nav nav-list bs-docs-sidenav">
        <li><a href="#about">О проекте<i class="icon-chevron-right"></i></a></li>
        <li><a href="#base">Базовый список<i class="icon-chevron-right"></i></a></li>

        <li><a href="#mixin2">Удаляемые<i class="icon-chevron-right"></i></a></li>
        <li><a href="#mixin3">Drag and Drop<i class="icon-chevron-right"></i></a></li>
        <li><a href="#mixin5">Редактируемые<i class="icon-chevron-right"></i></a></li>
        <li><a href="#mixin8">Выбор действия<i class="icon-chevron-right"></i></a></li>
        <li><a href="#mixin6">Подсписки<i class="icon-chevron-right"></i></a></li>
        <li><a href="#mixin">Примешивание<i class="icon-chevron-right"></i></a></li>

        <li><a href="#mixin7">Комбин. функ.<i class="icon-chevron-right"></i></a></li>

        <li><a href="#mixin9">Живой поиск<i class="icon-chevron-right"></i></a></li>
        <li><a href="#mixin10">Переключатель<i class="icon-chevron-right"></i></a></li>
        <li><a href="#mixin11">Datapicker<i class="icon-chevron-right"></i></a></li>
        <li><a href="#mixin12">Добавление<i class="icon-chevron-right"></i></a></li>
        <li><a href="#mixin13">Форма ввода<i class="icon-chevron-right"></i></a></li>
      </ul>
    </div>
    <div class="span9">
      <section id="about">
        <div class="page-header">
          <h1>О проекте</h1>
        </div>
        <p>Данная библиотека была разработана для работы со списками. Она реализована на  основе  современного
        web-инструментария  Backbone.js , Underscore.js, Jquery.js, JQuery.UI.js,
        Twitter.bootstrap.js
        <p>
      </section>
      <section id="base">
        <div class="page-header">
          <h1>Базовый список</h1>
        </div>
        <p>Список – элемент интерфейса базовый для вкладок, на которых требуется
          отображение большого количества однотипной информации. Списки наследуется
          от Backbone.View и при инициализации получают ссылку на экземпляр класса
          Backbone.Collection и на экземпляр класса Backbone.View_item (класс
          представления элемента списка). Списки строятся на основе информации с сервера,
          переданной в json формате. Внешний вид элементов списка получается с
          помощью шаблона элемента списка. Данные сервера сохраняются в классе,
          наследуемом от Backbone.Collection.
        </p>
        <h3>Объявление</h3>
        <pre>
TiragSales.Views.Users = Backbone.ViewList.extend({
    initialize:function () {
        this.proto();
    },
    render:function () {
        this._render(this.$el, this.collection, this._item, 'list');
        return this;
    },
    _item:Backbone.ViewItem.extend({
            template:JST['users/item'],
            template_not_item:JST['users/not_item'],
            tagName:"tr",
            initialize:function (options) {
                this.proto(options);
            }
        })
});

        </pre>
        <h3>Вызов</h3>
        <pre>
 $(function(){
                var collection = new TiragSales.Collections.Users([{name : 'Kita'},{name : 'Kita'},{name : 'Kita'}],{url : 'users'})
                new TiragSales.Views.Users({el: $('#list_1').get(0), collection : collection})
            })
        </pre>

        <script type="text/javascript">
            $(function(){
                var collection = new TiragSales.Collections.Users([{name : 'Kita'},{name : 'Kita'},{name : 'Kita'}],{url : 'users'})
                new TiragSales.Views.Users({el: $('#list_1').get(0), collection : collection})
            })

        </script>
        <h3>Пример</h3>
        <table class="table table-bordered" id="list_1">

        </table>
      </section>
      <section id="mixin2">
        <div class="page-header">
          <h1>Удаляемые</h1>
        </div>
        <h3>Объявление</h3>
        <pre>
TiragSales.Views.Users = Backbone.ViewList.extend({
    initialize:function () {
        this.proto();
    },
    render:function () {
        this._render(this.$el, this.collection, this._item, 'list');
        return this;
    },
    _item:Backbone.ViewItem.extend({
            template:JST['users/item'],
            template_not_item:JST['users/not_item'],
            tagName:"tr",
            initialize:function (options) {
                this.proto(options);
            }
        })
});

        </pre>
        <h3>Вызов</h3>
        <pre>
$(function(){
        var collection = new TiragSales.Collections.Users([{id:1,name : 'Kita'},{id:2,name : 'Kita'},{id:3,name : 'Kita'}],{url : 'users'})
        new TiragSales.Views.UsersWithDelete({el: $('#list_2').get(0), collection : collection})
        })
        </pre>
        <script type="text/javascript">
        $(function(){
        var collection = new TiragSales.Collections.Users([{id:1,name : 'Kita'},{id:2,name : 'Kita'},{id:3,name : 'Kita'}],{url : 'users'})
        new TiragSales.Views.UsersWithDelete({el: $('#list_2').get(0), collection : collection})
        })
        </script>
        <h3>Пример</h3>
        <table class="table-bordered table" id="list_2"></table>
      </section>
      <section id="mixin3">
        <div class="page-header">
          <h1>Drag and Drop</h1>
          <h3>Объявление Drop</h3>
        <pre>
TiragSales.Views.UsersWithDrop = Backbone.ViewListWithDrop.extend({
    initialize:function () {
        this.proto();
    },
    render:function () {
        this._render(this.$el, this.collection, this._item, 'list');
        return this;
    },
    _item:Backbone.ViewItem.extend({
        template:JST['users/item_with_drop'],
        template_not_item:JST['users/not_item'],
        tagName:"tr",
        initialize:function (options) {
            this.proto(options);
        }
    })
});
        </pre>

          <h3>Объявление Drag</h3>
        <pre>

TiragSales.Views.UsersWithDrag = Backbone.ViewListWithDrag.extend({
    initialize:function () {
        this.proto();
    },
    render:function () {
        this._render(this.$el, this.collection, this._item, 'list');
        return this;
    },
    _item:Backbone.ViewItem.extend({
        template:JST['users/item_with_drag'],
        template_not_item:JST['users/not_item'],
        tagName:"tr",
        initialize:function (options) {
            this.proto(options);
        }
    })
});

        </pre>

          <h3>Вызов Drop</h3>
        <pre>
$(function(){
        var collection = new TiragSales.Collections.Users([{id:1,name : 'Kita'},{id:2,name : 'Kita'},{id:3,name : 'Kita'}],{url : 'users'})
        new TiragSales.Views.UsersWithDrop({el: $('#list_4').get(0), collection : collection})
        })
        </pre>

          <h3>Вызов Drag</h3>
        <pre>
$(function(){
        var collection = new TiragSales.Collections.Users([{id:1,name : 'Kita'},{id:2,name : 'Kita'},{id:3,name : 'Kita'}],{url : 'users'})
        new TiragSales.Views.UsersWithDrag({el: $('#list_4').get(0), collection : collection})
        })
        </pre>

          <script type="text/javascript">
              $(function(){
                  var collection = new TiragSales.Collections.Users([{id:1,name : 'Kita'},{id:2,name : 'Kita'},{id:3,name : 'Kita'}],{url : 'users'})
                  new TiragSales.Views.UsersWithDrop({el: $('#list_4').get(0), collection : collection})
              })
              $(function(){
                  var collection = new TiragSales.Collections.Users([{id:1,name : 'Kita'},{id:2,name : 'Kita'},{id:3,name : 'Kita'}],{url : 'users'})
                  new TiragSales.Views.UsersWithDrag({connectWith : "#list_4" ,el: $('#list_5').get(0), collection : collection})
              })
          </script>
          <h3>Пример Drop</h3>
          <table class="table-bordered table" id="list_4"></table>
          <h3>Пример Drag</h3>
          <table class="table-bordered table" id="list_5"></table>
        </div>
      </section>
      <section id="mixin5">
        <div class="page-header">
          <h1>Редактируемые</h1>
        </div>
        <h3>Объявление</h3>
        <pre>
TiragSales.Views.UsersWithEdit = Backbone.ViewListWithEdit.extend({
    initialize:function () {
        this.proto();
    },
    render:function () {
        this._render(this.$el, this.collection, this._item, 'list');
        return this;
    },
    _item:Backbone.ViewItem.extend({
        template:JST['users/item_with_edit'],
        template_not_item:JST['users/not_item'],
        tagName:"tr",
        initialize:function (options) {
            this.proto(options);
        }
    })
});
        </pre>
        <h3>Вызов</h3>
        <pre>
        $(function(){
             var collection = new TiragSales.Collections.Users([{id:1,name : 'Kita'},{id:2,name : 'Kita'},{id:3,name : 'Kita'}],{url : 'users'})
             new TiragSales.Views.UsersWithEdit({el: $('#list_3').get(0), collection : collection})
        })
        </pre>
        <script type="text/javascript">
            $(function(){
                var collection = new TiragSales.Collections.Users([{id:1,name : 'Kita'},{id:2,name : 'Kita'},{id:3,name : 'Kita'}],{url : 'users'})
                new TiragSales.Views.UsersWithEdit({el: $('#list_3').get(0), collection : collection})
            })

        </script>
        <h3>Пример</h3>
        <table class="table-bordered table" id="list_3">

        </table>
      </section>
      <section id="mixin8">
        <div class="page-header">
          <h1>Выбор действия</h1>

        </div>
        <h3>Объявление</h3>
        <pre>
TiragSales.Views.UsersWithSelect = Backbone.ViewListWithEdit.extend({
    initialize:function () {
        this.proto();
    },
    render:function () {
        this._render(this.$el, this.collection, this._item, 'list');
        return this;
    },
    _item:Backbone.ViewItem.extend({
        template:JST['users/item_with_edit'],
        template_not_item:JST['users/not_item'],
        tagName:"tr",
        initialize:function (options) {
            this.proto(options);
        }
    })
});
        </pre>
        <h3>Вызов</h3>
        <pre>
        $(function(){
             var collection = new TiragSales.Collections.Users([{id:1,name : 'Kita'},{id:2,name : 'Kita'},{id:3,name : 'Kita'}],{url : 'users'})
             new TiragSales.Views.UsersWithSelect({el: $('#list_6').get(0), collection : collection})
        })
        </pre>
        <script type="text/javascript">
            $(function(){
                var collection = new TiragSales.Collections.Users([{id:1,name : 'Kita'},{id:2,name : 'Kita'},{id:3,name : 'Kita'}],{url : 'users'})
                new TiragSales.Views.UsersWithSelect({el: $('#list_6').get(0), collection : collection})
            })

        </script>
        <h3>Пример</h3>
        <table class="table-bordered table" id="list_6">

        </table>

      </section>
      <section id="mixin6">
        <div class="page-header">
          <h1>Button groups</h1>
          dfvdfvfdv
          <br>
          edfgefdg
          <br>
          sdfgsd
          dfvdfvfdv
          <br>
          edfgefdg
          <br>
        </div>
      </section>
      <section id="mixin">
        <div class="page-header">
          <h1>Примешивание</h1>

        </div>
      </section>
      <section id="mixin7">
        <div class="page-header">
          <h1>Button groups</h1>
          dfvdfvfdv
          <br>
          edfgefdg
          <br>
          sdfgsd
          dfvdfvfdv
          <br>
          edfgefdg
          <br>
        </div>
      </section>
      <section id="mixin9">
        <div class="page-header">
          <h1>Button groups</h1>
          dfvdfvfdv
          <br>
          edfgefdg
          <br>
          sdfgsd
          dfvdfvfdv
          <br>
          edfgefdg
          <br>
        </div>
      </section>
      <section id="mixin10">
        <div class="page-header">
          <h1>Button groups</h1>
          dfvdfvfdv
          <br>
          edfgefdg
          <br>
          sdfgsd
          dfvdfvfdv
          <br>
          edfgefdg
          <br>
        </div>
      </section>
      <section id="mixin11">
        <div class="page-header">
          <h1>Button groups</h1>
          dfvdfvfdv
          <br>
          edfgefdg
          <br>
          sdfgsd
          dfvdfvfdv
          <br>
          edfgefdg
          <br>
        </div>
      </section>
      <section id="mixin12">
        <div class="page-header">
          <h1>Button groups</h1>
          dfvdfvfdv
          <br>
          edfgefdg
          <br>
          sdfgsd
          dfvdfvfdv
          <br>
          edfgefdg
          <br>
        </div>
      </section>
      <section id="mixin13">
        <div class="page-header">
          <h1>Button groups</h1>
          dfvdfvfdv
          <br>
          edfgefdg
          <br>
          sdfgsd
          dfvdfvfdv
          <br>
          edfgefdg
          <br>
        </div>
      </section>
    </div>
  </div>

</div>
<footer class="footer">
  <div class="container">
    <p>Designed and built with all the love in the world by <a target="_blank" href="http://twitter.com/mdo">@mdo</a> and <a target="_blank" href="http://twitter.com/fat">@fat</a>.</p>
    <p>Code licensed under <a target="_blank" href="http://www.apache.org/licenses/LICENSE-2.0">Apache License v2.0</a>, documentation under <a href="http://creativecommons.org/licenses/by/3.0/">CC BY 3.0</a>.</p>
    <p><a href="http://glyphicons.com">Glyphicons Free</a> licensed under <a href="http://creativecommons.org/licenses/by/3.0/">CC BY 3.0</a>.</p>
    <ul class="footer-links">
      <li><a href="http://blog.getbootstrap.com">Blog</a></li>
      <li class="muted">·</li>
      <li><a href="https://github.com/twitter/bootstrap/issues?state=open">Issues</a></li>
      <li class="muted">·</li>
      <li><a href="https://github.com/twitter/bootstrap/wiki">Roadmap and changelog</a></li>
    </ul>
  </div>
</footer>

